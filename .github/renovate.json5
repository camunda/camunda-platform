{
  "extends": ["config:base"],
  "description": "Keeps camunda-platform up to date",
  "baseBranches": ["main", "/^stable\\/.*/"],
  "dependencyDashboard": true,

  "packageRules": [
    {
      // Disable major version update for all Helm components.
      "enabled": false,
      "matchManagers": ["regex"],
      "matchUpdateTypes": ["major"]
    },
    // Disable deprecated stable branches
    {
      "matchBaseBranches": ["/^stable\\/8.0/"],
      "enabled": false
    },
    {
      "matchBaseBranches": ["/^stable\\/8.1/"],
      "enabled": false
    },
    {
      // Disable minor version update for previous Camunda releases which will only get patch updates.
      "enabled": false,
      "matchManagers": ["regex"],
      "matchPaths": [".env"],
      "matchBaseBranches": ["/^stable\\/8\\..*/"],
      "matchUpdateTypes": ["minor"]
    },
    // Operate stable branch conditions
    {
      "matchBaseBranches": ["/^stable\\/8.2/"],
      "matchDepNames": ["camunda/operate"],
      "allowedVersions": "<8.3.0",
    },
    {
      "matchBaseBranches": ["/^stable\\/8.3/"],
      "matchDepNames": ["camunda/operate"],
      "allowedVersions": "<8.4.0",
    },
    {
      "matchBaseBranches": ["/^stable\\/8.4/"],
      "matchDepNames": ["camunda/operate"],
      "allowedVersions": "<8.5.0",
    },
    // Optimize stable branch conditions
    {
      "matchBaseBranches": ["/^stable\\/8.2/"],
      "matchDepNames": ["camunda/optimize"],
      "allowedVersions": "<3.11.0",
    },
    {
      "matchBaseBranches": ["/^stable\\/8.3/"],
      "matchDepNames": ["camunda/optimize"],
      "allowedVersions": "<8.4.0",
    },
    {
      "matchBaseBranches": ["/^stable\\/8.4/"],
      "matchDepNames": ["camunda/optimize"],
      "allowedVersions": "<8.5.0",
    },
    // Connectors stable branch conditions
    {
      "matchBaseBranches": ["/^stable\\/8.2/"],
      "matchDepNames": ["camunda/connectors-bundle"],
      "allowedVersions": "<0.24.0",
    },
    {
      "matchBaseBranches": ["/^stable\\/8.3/"],
      "matchDepNames": ["camunda/connectors-bundle"],
      "allowedVersions": "<8.4.0",
    },
    {
      "matchBaseBranches": ["/^stable\\/8.4/"],
      "matchDepNames": ["camunda/connectors-bundle"],
      "allowedVersions": "<8.5.0",
    },
    // Web-Modeler stable branch conditions
    {
      "matchBaseBranches": ["/^stable\\/8.2/"],
      "matchDepNames": ["camunda/web-modeler"],
      "allowedVersions": "<8.3.0",
    },
    {
      "matchBaseBranches": ["/^stable\\/8.3/"],
      "matchDepNames": ["camunda/web-modeler"],
      "allowedVersions": "<8.4.0",
    },
        {
      "matchBaseBranches": ["/^stable\\/8.4/"],
      "matchDepNames": ["camunda/web-modeler"],
      "allowedVersions": "<8.5.0",
    },
    // Other special conditions
    {
      "matchDepNames": ["bitnami/keycloak"],
      "matchUpdateTypes": ["major", "minor"],
      "enabled": false,
    },
    {
      "matchDatasources": ["go"],
      "enabled": false,
    },
    {
      "matchUpdateTypes": ["minor", "patch"],
      "automerge": true,
    },
    // disable auto-merge for alpha release candidates
    {
      "matchNewValue": "/.*alpha[0-9]*-rc[0-9]*/",
      "automerge": false
    },
    {
      // we manually made this package for renovate.
      // no need to update it again
      "matchDepNames": ["docker.io/bitnami/keycloak"],
      "enabled": false,
    },
  ],

  "regexManagers": [
    {
      // This is mainly used to update Web-Modeler image tag.
      // section is copied from camunda/camunda-platform-helm
      "fileMatch": [".env"],
      "datasourceTemplate":"docker",
      "matchStrings": [
        "# renovate: datasource=docker depName=(?<depName>[^\\s]+?)(?: (lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: registryUrl=(?<registryUrl>[^\\s]+?))?\\s*?(\\S+)=(?<currentValue>\\S+)"
      ],
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    },
    {
      "fileMatch": [".env", ".keycloak/Dockerfile"],
      "matchStrings": ["KEYCLOAK_SERVER_VERSION\\s*=\\s*(?<currentValue>\\S+)", "KEYCLOAK_VERSION\\s*=\\s*(?<currentValue>\\S+)"],
      "depNameTemplate": "bitnami/keycloak",
      "datasourceTemplate": "docker",
    },
  ],
  "hostRules": [
    {
      "hostType": "docker",
      "matchHost": "https://registry.camunda.cloud",
      "username": "ci-distribution",
      "password": "{{ secrets.DISTRO_CAMUNDA_DOCKER_REGISTRY_PASSWORD }}"
    }
  ]
}
